// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String    @unique
  username       String    @unique
  fullName       String
  password       String?
  avatarUrl      String?
  lastLoggedInAt DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime?
  favoriteIds    String[]  @db.ObjectId

  posts       Post[]
  Listing     Listing[]
  reservations Reservation[]

  @@map("users")
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  content   String?
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  posts Post[]

  @@map("categories")
}

model Post {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  slug       String    @unique
  summary    String?
  content    String?
  categoryId String    @db.ObjectId
  userId     String    @db.ObjectId
  imageUrl   String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?

  user     User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@map("posts")
}

model Listing {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  userId        String    @db.ObjectId
  price         Int
  country       String?
  latlng        Int[]
  region        String?

  user User @relation(fields: [userId], references: [id])

  reservations Reservation[]

  @@map("listings")
}

model Reservation {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @db.ObjectId
  listingId  String    @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?

  user User @relation(fields: [userId], references: [id])

  listing Listing @relation(fields: [listingId], references: [id])

  @@map("reservations")
}
